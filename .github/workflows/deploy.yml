name: danielcherubini/tugbot-rs
on:
  push:
  workflow_dispatch:

concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true
env:
  PROXMOX_URL: ${{ secrets.PROXMOX_URL }}
  PROXMOX_USERNAME: ${{ secrets.PROXMOX_USERNAME }}
  PROXMOX_TOKEN: ${{ secrets.PROXMOX_TOKEN }}
  DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
  DISCORD_APPLICATION_ID: ${{ secrets.DISCORD_APPLICATION_ID }}
  SSH_KEY: ${{ secrets.SSH_KEY }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
jobs:
  deploy:
    name: Deploy
    if: startsWith(github.ref, 'refs/tags')
    environment: prod
    runs-on:
      - self-hosted
    steps:
      - uses: actions/checkout@v4.1.0
        with:
          fetch-depth: 50
          lfs: false
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: test
        container:
          image: rust:1.81.0
        timeout-minutes: 60
        env:
          CARGO_HOME: "${{ github.workspace }}/.cargo"
        - run: rustc --version && cargo --version
        - run: cargo test --workspace --verbose
      - name: Packer
        environment: prod
        timeout-minutes: 60
        env:
          CARGO_HOME: "${{ github.workspace }}/.cargo"
          CI_COMMIT_TAG: "${{ github.ref_name }}"
        - run: packer init -upgrade packer
        - run: packer build -debug packer
      - name: Terraform
        defaults:
          run:
            working-directory: "${{ github.workspace }}/terraform"
        timeout-minutes: 60
        env:
          CARGO_HOME: "${{ github.workspace }}/.cargo"
          TF_ROOT: "${{ github.workspace }}/terraform"
          TF_VAR_pm_api_url: "${{ secrets.PROXMOX_URL }}"
          TF_VAR_pm_api_token_id: "${{ secrets.PROXMOX_USERNAME }}"
          TF_VAR_pm_api_token_secret: "${{ secrets.PROXMOX_TOKEN }}"
          TF_VAR_ssh_key: "${{ secrets.SSH_KEY }}"
          TF_VAR_tag_version: "${{ github.ref_name }}"
        steps:
        - uses: actions/checkout@v4.1.0
          with:
            fetch-depth: 50
            lfs: true
        - uses: actions/cache@v3.3.2
          with:
            path: "${{ env.TF_ROOT }}/.terraform"
            key: example-production
        - run: cd ${{ env.TF_ROOT }}
        - run: terraform init
        - run: terraform plan -out=/tmp/tfplan
        - run: terraform apply /tmp/tfplan
