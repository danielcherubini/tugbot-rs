name: danielcherubini/tugbot-rs
on:
  release:
    types: [published]
concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true
env:
  PROXMOX_URL: ${{ secrets.PROXMOX_URL }}
  PROXMOX_USERNAME: ${{ secrets.PROXMOX_USERNAME }}
  PROXMOX_TOKEN: ${{ secrets.PROXMOX_TOKEN }}
  DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
  DISCORD_APPLICATION_ID: ${{ secrets.DISCORD_APPLICATION_ID }}
  SSH_KEY: ${{ secrets.SSH_KEY }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
jobs:
  build-and-deploy:
    runs-on: self-hosted
    # container: rust:1.85.0
    timeout-minutes: 180
    env:
      CARGO_HOME: "${{ github.workspace }}/.cargo"
      TF_ROOT: "${{ github.workspace }}/terraform"
      TF_VAR_pm_api_url: "${{ secrets.PROXMOX_URL }}"
      TF_VAR_pm_api_token_id: "${{ secrets.PROXMOX_USERNAME }}"
      TF_VAR_pm_api_token_secret: "${{ secrets.PROXMOX_TOKEN }}"
      TF_VAR_ssh_key: "${{ secrets.SSH_KEY }}"
      TF_VAR_tag_version: "${{ github.ref_name }}"
      CI_COMMIT_TAG: "${{ github.ref_name }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.0
        with:
          fetch-depth: 50
          lfs: false

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check Rust and Cargo versions
        run: rustc --version && cargo --version

      - name: Run cargo tests
        run: cargo test --workspace --verbose

      - name: Checkout code for packer
        uses: actions/checkout@v4.1.0
        with:
          fetch-depth: 50
          lfs: true

      - name: Set environment variables
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Cache cargo for packer
        uses: actions/cache@v3.3.2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Initialize Packer
        run: packer init -upgrade packer

      - name: Build with Packer
        run: packer build -debug packer

      - name: Checkout code for terraform
        uses: actions/checkout@v4.1.0
        with:
          fetch-depth: 50
          lfs: true

      - name: Cache Terraform
        uses: actions/cache@v3.3.2
        with:
          path: "${{ env.TF_ROOT }}/.terraform"
          key: example-production

      - name: Change directory to Terraform root
        run: cd ${{ env.TF_ROOT }}

      - name: Initialize Terraform
        run: terraform init

      - name: Plan Terraform deployment
        run: terraform plan -out=/tmp/tfplan

      - name: Apply Terraform plan
        run: terraform apply /tmp/tfplan
