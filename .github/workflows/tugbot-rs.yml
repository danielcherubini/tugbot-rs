name: danielcherubini/tugbot-rs
on:
  push:
  workflow_dispatch:
concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true
env:
  PROXMOX_URL: ${{ secrets.PROXMOX_URL }}
  PROXMOX_USERNAME: ${{ secrets.PROXMOX_USERNAME }}
  PROXMOX_TOKEN: ${{ secrets.PROXMOX_TOKEN }}
  DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
  DISCORD_APPLICATION_ID: ${{ secrets.DISCORD_APPLICATION_ID }}
  SSH_KEY: ${{ secrets.SSH_KEY }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
jobs:
  test-cargo:
    name: release ${{ matrix.target }}
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-pc-windows-gnu, x86_64-unknown-linux-musl]
    steps:
      - uses: actions/checkout@master
      - name: Compile and release
        uses: rust-build/rust-build.action@v1.4.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          EXTRA_FILES: "README.md LICENSE"
  #   runs-on:
  #     - self-hosted
  #   container:
  #     image: rust:1.75.0
  #   timeout-minutes: 60
  #   env:
  #     CARGO_HOME: "${{ github.workspace }}/.cargo"
  #   steps:
  #   - uses: actions/checkout@v4.1.0
  #     with:
  #       fetch-depth: 50
  #       lfs: true
  #   - uses: actions/cache@v3.3.2
  #     with:
  #       path: |-
  #         .cargo/bin
  #         .cargo/registry/index
  #         .cargo/registry/cache
  #         target/debug/deps
  #         target/debug/build
  #       key: "${{ github.ref }}"
  #   - run: rustc --version && cargo --version
  #   - run: cargo test --workspace --verbose
  packer:
    needs: test-cargo
    runs-on:
      - self-hosted
    if: startsWith(github.ref, 'refs/tags')
    timeout-minutes: 60
    env:
      CARGO_HOME: "${{ github.workspace }}/.cargo"
    steps:
    - uses: actions/checkout@v4.1.0
      with:
        fetch-depth: 50
        lfs: true
    - uses: actions/cache@v3.3.2
      with:
        path: |-
          .cargo/bin
          .cargo/registry/index
          .cargo/registry/cache
          target/debug/deps
          target/debug/build
        key: "${{ github.ref }}"
    - run: packer init -upgrade packer
    - run: packer build -debug packer
  terraform:
    needs: packer
    runs-on:
      - self-hosted
      - terraform
    container:
      image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
    if: startsWith(github.ref, 'refs/tags')
    timeout-minutes: 60
    env:
      CARGO_HOME: "${{ github.workspace }}/.cargo"
      TF_ROOT: "${{ github.workspace }}/terraform"
      TF_ADDRESS: "${{ github.api_url }}/projects/${{ github.repository }}/terraform/state/tugstate"
      TF_VAR_pm_api_url: "${PROXMOX_URL}"
      TF_VAR_pm_api_token_id: "${PROXMOX_USERNAME}"
      TF_VAR_pm_api_token_secret: "${PROXMOX_TOKEN}"
      TF_VAR_ssh_key: "${SSH_KEY}"
      TF_VAR_version: "${{ github.ref }}"
    steps:
    - uses: actions/checkout@v4.1.0
      with:
        fetch-depth: 50
        lfs: true
    - uses: actions/cache@v3.3.2
      with:
        path: "${TF_ROOT}/.terraform"
        key: example-production
    - run: cd ${TF_ROOT}
    - run: gitlab-terraform init
    - run: gitlab-terraform plan
    - run: gitlab-terraform apply
